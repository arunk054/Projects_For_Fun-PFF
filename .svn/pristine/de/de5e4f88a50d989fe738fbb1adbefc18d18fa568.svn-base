<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
 <head>
    <title>Improve your Memory with FLICKR</title>
    <style type='text/css'>
/*	body {background-image:url('paper.gif');
	}*/
    #img_dump {
        width:390px;
        height:390px;
        border:1px solid;
        overflow:hidden;
        float:left;
    }
    #large_img {
	height:400px;
     float:left;
	 margin-left: 10px
     overflow:scroll;
    }
	.level {
		border: 1px solid;
		border-color: #999900;
		padding: 4px 8px 6px 8px;
		margin-right: 10px
	}
    img{float:left;border:1px solid yellow;}
    </style>
 </head>
 <body>
<!-- <div style='background-image:url(green020.jpg)'>-->
 <hr />
 <h3 align="center" style='black'>MEMORY GAME WITH FLICKR</h3>
 <hr /></div>
 <div>
 <form name = "form1" action = "" method = "get" onSubmit="return validate()">
  <span class='level'><b>Difficulty Level: </b><select name="diff"><option value="very_easy">Very Easy</option><option value="easy" >Easy</option><option value="medium" selected="selected">Medium</option><option value="hard"> Hard</option></select></span>
  <span class="level"><b>Memory Power: </b><select name="memPower"><option value="2">Two Images</option><option value="3">Three Images</option><option value="4" selected="selected">Four Images</option><option value="5">Five Images</option><option value="6">Six Images</option></select></span>
  <span class='level'><b>Movement: </b><select name="movType"><option value="within" selected="selected">Restricted</option><option value="all" >Haphazard</option></select></span>
 <br><br></b>
  <input type='text' id='tags' value='nature'>&nbsp;&nbsp;&nbsp;
  <input type='button' id='clickme' value='Get Photos'>&nbsp;&nbsp;&nbsp;
   <input type = "button" id = 'start' value = "START THE GAME!!!">
  </form>
  </div>
  <br>
<div id='img_dump'></div>
<div  id='large_img' >
<table><tr><td id = 'ar1'></td><td id = 'ar2'></td></tr><tr><td id = 'ar3'></td><td id = 'ar4'></td></tr><tr><td id = 'ar5'></td><td id = 'ar6'></td></tr></table>
</div>
 </body>
  <script type="text/javascript" src="http://yui.yahooapis.com/2.5.0/build/yahoo-dom-event/yahoo-dom-event.js"></script>
  <script type="text/javascript" src="flickr_get.js"></script>
  <script type="text/javascript" src="dom.js"></script>
    <script type="text/javascript" src="properties.js"></script>
<script type="text/javascript" src="http://yui.yahooapis.com/combo?2.8.0r4/build/yahoo-dom-event/yahoo-dom-event.js&2.8.0r4/build/animation/animation-min.js"></script>  
 <script type="text/javascript" src="http://yui.yahooapis.com/2.5.0/build/animation/animation-min.js"></script>

<script type="text/javascript" src="http://yui.yahooapis.com/combo?2.8.0r4/build/yahoo/yahoo.js&2.8.0r4/build/dom/dom.js&2.8.0r4/build/event/event.js&2.8.0r4/build/animation/animation.js"></script>
<script type="text/javascript" src="http://yui.yahooapis.com/combo?2.7.0/build/yahoo-dom-event/yahoo-dom-event.js&2.7.0/build/container/container-min.js"></script>
<script type="text/javascript" src="yui-min.js"></script>

  <script type='text/javascript'>
  	var  count = 1;
	var img_files = [];
	var temp;
	var rows = 2;
	var cols;
	var positions = [];

	var img = new Array(rows);
	var img_back = new Array(rows);
	var obj1 = null,obj2 = null;
	var val; var step; var dt; var anim_id ;var time_id;
	var back_img = "back.jpg";var max_wid = 150;var max_heit = 120;
	var cnt_images_left;
	var prev_img = null;
	var prev_z;var elem_z;

	var score = 0;
	var score_disp;var status1;
	var diff_level = "medium"; //default

	var moveImages = moveImagesNew;

//Important : http://www.netlobo.com/url_query_string_javascript.html
	function gup( name )
	{
	  name = name.replace(/[\[]/,"\\\[").replace(/[\]]/,"\\\]");
	  var regexS = "[\\?&]"+name+"=([^&#]*)";
	  var regex = new RegExp( regexS );
	  var results = regex.exec( window.location.href );
	  if( results == null )
		return "";
	  else
		return results[1];
	}

	function repeatMove() {
		if (diff_level === "hard")
		{
			setTimeout(moveImages,500);
		} else if (diff_level === "medium")
		{
			setTimeout(moveImages,1500);
		} else if (diff_level === "easy")
		{
			setTimeout(moveImages,4000);
		}
	}

	function moveImagesNew() {
		var total = rows*cols*2;
		var i = 0;
		var randRow, randCol;
		var pairs = [];
		var j;
		while(i < total) {
			while(true){
				//Select a num at random
				randRow  = Math.floor(Math.random()*rows);
				randCol = Math.floor(Math.random()*cols);
				var found = 0;
				for (j=0;j<pairs.length;j+=2){
					if (pairs[j]==randRow && pairs[j+1] == randCol) {
						found = 1;
						break;
					}
				}
				if (found == 0) {
					pairs.push(randRow);
					pairs.push(randCol);
					i+=2;
					break;
				}
			}
		}
		var anim;
		var tgx;
		var tgy;
		var offset;
		var k = 0;
		i = 0;
		for(k=0;k<rows;k++) {
			for(j=0;j<cols;++j){
				tgx = pairs[(i)];
				tgy = pairs[(i+1)];
				offset = (tgx*cols*2)+(tgy*2);
				var x_dir=positions[offset];
				var y_dir=positions[offset+1];
				var attributes = {  
					points: { to: [x_dir, y_dir] }  
				};
				i+=2;
				anim = new YAHOO.util.Motion(k+""+j+""+"bk", attributes); 
				anim.animate();
			}
		}
		anim.onComplete.subscribe(repeatMove);
	}

	function moveImagesOld() {
		var anim;
		for(i=0;i<rows;i++) {
			for(j=0;j<cols;++j){
				var x_dir=Math.ceil(Math.random()*800);
				var y_dir=Math.floor(Math.random()*400);

				var attributes = {  
					points: { to: [x_dir, y_dir] }  
				};
	    		anim = new YAHOO.util.Motion(i+""+j+""+"bk", attributes); 
				anim.animate();
			}
		}
		anim.onComplete.subscribe(repeatMove);
	}
	function reverseImageBack() {
			status1.innerHTML = "";
			if (obj1 != null && obj2 != null) {
				obj1.src=back_img;
				obj2.src=back_img;
				document.getElementById(obj1.i+""+obj1.j+"bk").style.zIndex = prev_z;
				document.getElementById(obj2.i+""+obj2.j+"bk").style.zIndex = elem_z;
				obj1 = null;obj2=null;
			}
	}

	var clicked_back_img = function(e) {

		var elem = YAHOO.util.Event.getTarget(e);

		if (prev_img == null)
		{
			clearTimeout(time_id);
			reverseImageBack();
			prev_img=img[elem.i][elem.j];
			elem.src=img[elem.i][elem.j].src;
			prev_z=elem.style.zIndex;
			elem.style.zIndex = 998;
		} else {
			elem_z = elem.style.zIndex;
			elem.style.zIndex = 999;

			//Display it
			elem.src=img[elem.i][elem.j].src;

			//ignore if user clicks on the same
			if ((prev_img.i === elem.i) && (prev_img.j===elem.j)) {
				return;
			}
			//compare
			if (prev_img.src === img[elem.i][elem.j].src)
			{
				//alert("SUCCESS!");
				status1.innerHTML = "<blink>SUCCESS!</blink><br>";
				YAHOO.util.Event.removeListener(prev_img.i+""+prev_img.j+"bk", "click"); 
				YAHOO.util.Event.removeListener(elem.i+""+elem.j+"bk", "click"); 
				var attribs = {  
			        width: { to: 0 } , height: {to : 0}
			    };
				var duration = 1;// seconds
				var anim = new YAHOO.util.Anim(prev_img.i+""+prev_img.j+"bk", attribs, duration, YAHOO.util.Easing.easeOut);
				anim.animate();
				anim = new YAHOO.util.Anim(elem.i+""+elem.j+"bk", attribs, duration, YAHOO.util.Easing.easeOut);
				anim.animate();
				var temp_prev = prev_img;
				cnt_images_left = cnt_images_left-2;
				setTimeout(function () {	
					var pp = document.getElementById(temp_prev .i+""+temp_prev .j+"td");
					pp.removeChild(img_back[temp_prev .i][temp_prev .j]);
					img_back[temp_prev .i][temp_prev .j] = null;img[temp_prev .i][temp_prev .j] = null;

					pp = document.getElementById(elem.i+""+elem.j+"td");
					pp.removeChild(img_back[elem.i][elem.j]);
					img_back[elem.i][elem.j]=null;img[elem.i][elem.j]=null;
					status1.innerHTML = "";
				}, duration * 1000);

				//Increment the score by 10
				score += 10;


			} else {

				//alert("TRY AGAIN!");
				status1.innerHTML = "<blink>TRY AGAIN!</blink><br>";
				
				obj1 = img_back[prev_img.i][prev_img.j];obj2 = img_back[elem.i][elem.j];
				time_id = setTimeout(function () {
					reverseImageBack();
				},1000);//millisecs to show the image if it doesnt match

				//Dec the score by 5
				score -= 5;
			}

			prev_img=null;
			score_disp.innerHTML = "Score: "+score;
			//if (diff_level === "easy")
			//{
				//moveImages();
			//}
			//Game Over
			if (cnt_images_left == 0)
			{
				status1.innerHTML = "";
				//remove the table;
				//document.body.removeChild(document.body.getElementByID("table2_id"));
				//var d = DOM.dom('A',{href:"index.html"},["Click here to PLAY AGAIN"]);

				score_disp.innerHTML = "FINAL SCORE: "+score;

				var d = document.createElement("H2");
				d.innerHTML = "<A HREF = ''>Click here to PLAY AGAIN</A>"
				document.body.appendChild(d);

			}
		}

	}

	function add_listeners() {

//		var ab = document.getElementById(0+""+0+"bk");
//		ab.addEventListener('dblclick',clicked_back_img,false);
		for (i=0; i<rows; i++)
		{
			for(j=0;j<cols;j++){
				 YAHOO.util.Event.addListener(i+""+j+"bk", "click", clicked_back_img, true);
			}
		}
	}


	function fadingEffect () {

		/*var attributes = { 
	        width: { to: 0 } 
	    }; 
	    var anim = new YAHOO.util.Anim('demo', attributes, 1, YAHOO.util.Easing.easeOut); */
		val = val - step;		
		for (i=0;i<rows;++i )
		{
			for (j=0;j<cols ; ++j)
			{
				//img[i][j].style.filter = "alpha(opacity=40)";//For IE
				img[i][j].style.opacity=val;// for fireffox
			}
		}
		if (val <= 0)
		{
			clearInterval(anim_id);
			//Show the ulta image
			val = val - step;
			var cnt=0
			for (i=0;i<rows;++i )
			{
				img_back[i] = new Array(cols);
				for (j=0;j<cols ; ++j)
				{
					var d = document.getElementById(i+""+j+"td");
					d.removeChild(document.getElementById(i+""+j));
					img_back[i][j] = document.createElement("IMG");
					img_back[i][j].src = back_img;
					img_back[i][j].width=max_wid;img_back[i][j].height = max_heit;
					img_back[i][j].i=i;img_back[i][j].j=j;
					img_back[i][j].id=i+""+j+"bk";
					img_back[i][j].style.zIndex=cnt++;
					d.appendChild(img_back[i][j]);
				}
			}	
/*			score_disp = DOM.dom("input",
                {type     : "text", 
				 readOnly : true,
				 style    : "background-color: white; font-size:22pt;border : 0",
				 value    : "Score : 0", id: "score_disp"
				 }, []);*/

			score_disp = document.createElement("H2");
			score_disp.innerHTML = "Score: "+0;

			document.body.appendChild(document.createElement("br"));
			document.body.appendChild(score_disp);

			status1 = document.createElement("H2");
			status1.innerHTML = "";
			document.body.appendChild(status1);

			add_listeners();
			if (diff_level !== "very_easy")
			{
				moveImages();
			}


		}
	}
	function displayAndFade () {

		var node = [];
		var table = document.createElement('TABLE');

//		DOM.setNodeAttributes(table,	{border: 0, id : "table2_id",style: "table-layout: fixed"});
		DOM.setNodeAttributes(table,	{border: 0, id : "table2_id"});


		for (k=0; k<rows ; ++k)
		{
			node= [];
			var row = document.createElement('TR');

			for (i=0; i<cols; i++)
			{
				node.push(document.createElement('IMG'));
				node[i].src=img[k][i];
				node[i].width=max_wid;node[i].height = max_heit;
				//node[i].style.filter = "alpha(opacity=40)";//For IE
				//node[i].style.opacity=0.4;// for fireffox
				node[i].id = k+""+i;
				node[i].i = k;
				node[i].j = i;
				img[k][i]=node[i];

				var td = document.createElement('TD');
				td.id=k+""+i+"td";
				td.appendChild(node[i]);
				//DOM.setNodeAttributes(td,{style: "empty-cells: show"});
				row.appendChild(td);
			}

			table.appendChild(row);
		}
		document.body.appendChild(table);
		//Populate the positions of all the table datas
		var pos;
		positions=[];
		for (k=0; k<rows; k++) {
			for (i=0; i<cols; i++) {
				pos = getElementAbsolutePos(k+""+i+"td");
				positions.push(pos.x);
				positions.push(pos.y);
			}
		}
		i=10; val = 2; step = 0.025;dt = 5;
		anim_id = setInterval(fadingEffect,dt);

	}


	function randomize() {
		cols = img_files.length;
		cnt_images_left = rows * cols;
		score = 0;

		for (i=0; i<rows-1; ++i)
		{
			for (j = 0; j<cols; ++j)
			{
				img_files.push(img_files[j]);
			}

		}
		var j;
		var cur_row = -1;
		temp = rows * cols;
		for (i=0; i<temp; ++i)
		{
			if ((i)%cols == 0)
			{
				cur_row++;
				img[cur_row] = new Array(cols);
			}
			j = Math.floor(Math.random() * (temp-i));
			img[cur_row][i%cols] = img_files[j];
			img_files.splice(j,1);
		}

		displayAndFade();

	}	


  function startGame() {
	if (count < parseInt(document.form1.memPower.value)+1)
	{
		alert("Your Memory Power requires atleast "+document.form1.memPower.value +" images to be selected.");
		return false;
	}

	diff_level = document.form1.diff.value;
	if (document.form1.movType.value == 'all')
	{
		moveImages = moveImagesOld;
	} else {
		moveImages = moveImagesNew;
	}

	document.body=document.createElement("body");
	document.bgColor = "white";
	//randomize the cards
	randomize();

	return true;
  }

 function toQueryString(obj) {      
   var parts = [];      
   for(var each in obj) if (obj.hasOwnProperty(each)) {  
     parts.push(encodeURIComponent(each) + '=' + encodeURIComponent(obj[each]));      
   }      
   return parts.join('&');    
 }

   function goFetch()
   {
      //var baseURI = "http://query.yahooapis.com/v1/public/yql";
      var _tag = document.getElementById("tags").value;
      if(_tag == "")
         _tag = "nature";
//      var s = "select * from flickr.photos.search(25) where tags='"+ _tag +"'";
//        var s = "select * from flickr.photos.search where text=\""+ _tag +"\" limit 25";
//      YAHOO.remoteData.fetch(s,DumpData, this, true);

		YUI().use('node', 'yql', 'gallery-oauth', function(Y) {    

			//Using with YQL oAuth Gallery module select * from flickr.photos.search where text="'+ _tag +'" limit 25
			Y.oAuth.ready(function() {
	console.log('rd');
				Y.YQL('select * from geo.places where text="san francisco, ca"', function(r) {
				console.log('qr');
				console.log(r);
					DumpData(r);				
				}, {
					key: 'dj0yJmk9RVd6RFFOS0J3Y05rJmQ9WVdrOU9ESXdSSEYwTjJVbWNHbzlNekl6T0RreE16WXkmcz1jb25zdW1lcnNlY3JldCZ4PThm',
					secret: '54e9f92a0a740e1afbc0f5f50e91fdafcc3122ab',
					base: 'http://query.yahooapis.com/v1/yql?'
				});

			});

		});

   }
    function validate () {

		goFetch();
		return false;

    }
   function DumpData(o)
   {
   if (!o.query.results)
   {
		alert("No photos found! Try another query.");
	   return;
   }
   console.log(o);
      var _res = o.query.results.photo;
      var _tot = _res.length;
      var _str = _src = "";
      for(var i = 0; i<_tot; i++)
      {
        _src = "http://farm" + _res[i].farm + ".static.flickr.com/" + _res[i].server;
        _src += "/" + _res[i].id + "_" + _res[i].secret + "_s.jpg";
        _str += "<img src = '" + _src + "' alt='" + _res[i].title + "' title='" + _res[i].title + "'>";
      }

      var dump = document.getElementById("img_dump");
      dump.innerHTML = _str;
   }
	 

   function clickImage(e) {

	if (count > parseInt(document.form1.memPower.value))
	{
		alert("Already Selected "+document.form1.memPower.value+" images. Increase memory power to select more images.");
		return;
	}
    var _tr = YAHOO.util.Event.getTarget(e);
	var src = _tr.src.toString().replace(/_s/, "");

	//Chek for duplicate

	for(i=0;i<img_files.length;++i)
	{
		if (src === img_files[i])
		{
			alert("Image already selected!!");
			return;
		}
	}
	var s = "ar"+count+"";

//    document.getElementById(s).appendChild = "<img src = '"+_tr.src.toString().replace(/_s/, "") +"'>";
	var img = document.createElement('IMG');
	img.src=src;
	img.width=200;img.height=160;
	document.getElementById(s).appendChild(img);
	count++;
	img_files.push(img.src);
   }

   // Assign the global click handler
   YAHOO.util.Event.addListener("img_dump", "click", clickImage, true);

   YAHOO.util.Event.addListener("start", "click", startGame, true);
	
    // Assign click handlers to all the button to fetch data
   YAHOO.util.Event.addListener('clickme', "click", goFetch, true);

   //document.getElementById("tags").addEventListener("keypress", handleKeypress, false);

   // Go fetch data, on page load
   YAHOO.util.Event.addListener(window, "load", goFetch, true);


	//===== Following copied from http://blogs.korzh.com/progtips/2008/05/28/absolute-coordinates-of-dom-element-within-document.html ===== 

	function __getIEVersion() {
    var rv = -1; // Return value assumes failure.
    if (navigator.appName == 'Microsoft Internet Explorer') {
        var ua = navigator.userAgent;
        var re = new RegExp("MSIE ([0-9]{1,}[\.0-9]{0,})");
        if (re.exec(ua) != null)
            rv = parseFloat(RegExp.$1);
    }
    return rv;
}

function __getOperaVersion() {
    var rv = 0; // Default value
    if (window.opera) {
        var sver = window.opera.version();
        rv = parseFloat(sver);
    }
    return rv;
}

var __userAgent = navigator.userAgent;
var __isIE =  navigator.appVersion.match(/MSIE/) != null;
var __IEVersion = __getIEVersion();
var __isIENew = __isIE && __IEVersion >= 8;
var __isIEOld = __isIE && !__isIENew;

var __isFireFox = __userAgent.match(/firefox/i) != null;
var __isFireFoxOld = __isFireFox && ((__userAgent.match(/firefox\/2./i) != null) || (__userAgent.match(/firefox\/1./i) != null));
var __isFireFoxNew = __isFireFox && !__isFireFoxOld;

var __isWebKit =  navigator.appVersion.match(/WebKit/) != null;
var __isChrome =  navigator.appVersion.match(/Chrome/) != null;
var __isOpera =  window.opera != null;
var __operaVersion = __getOperaVersion();
var __isOperaOld = __isOpera && (__operaVersion < 10);

function __parseBorderWidth(width) {
    var res = 0;
    if (typeof(width) == "string" && width != null && width != "" ) {
        var p = width.indexOf("px");
        if (p >= 0) {
            res = parseInt(width.substring(0, p));
        }
        else {
     		//do not know how to calculate other values (such as 0.5em or 0.1cm) correctly now
    		//so just set the width to 1 pixel
            res = 1; 
        }
    }
    return res;
}


//returns border width for some element
function __getBorderWidth(element) {
	var res = new Object();
	res.left = 0; res.top = 0; res.right = 0; res.bottom = 0;
	if (window.getComputedStyle) {
		//for Firefox
		var elStyle = window.getComputedStyle(element, null);
		res.left = parseInt(elStyle.borderLeftWidth.slice(0, -2));  
		res.top = parseInt(elStyle.borderTopWidth.slice(0, -2));  
		res.right = parseInt(elStyle.borderRightWidth.slice(0, -2));  
		res.bottom = parseInt(elStyle.borderBottomWidth.slice(0, -2));  
	}
	else {
		//for other browsers
		res.left = __parseBorderWidth(element.style.borderLeftWidth);
		res.top = __parseBorderWidth(element.style.borderTopWidth);
		res.right = __parseBorderWidth(element.style.borderRightWidth);
		res.bottom = __parseBorderWidth(element.style.borderBottomWidth);
	}
   
	return res;
}


//returns the absolute position of some element within document
function getElementAbsolutePos(elemID) {
	var element;
	if (typeof(elemID) == "string")	{
		element = document.getElementById(elemID);
	}
	else {
		element = elemID;
	}

	var res = new Object();
	res.x = 0; res.y = 0;
	if (element !== null) {
    	res.x = element.offsetLeft;

		var offsetParent = element.offsetParent;
		var offsetParentTagName = offsetParent != null ? offsetParent.tagName.toLowerCase() : "";

        if (__isIENew  && offsetParentTagName == 'td') {
		    res.y = element.scrollTop;
		}
		else {
		    res.y = element.offsetTop;
		}
    	
		var parentNode = element.parentNode;
		var borderWidth = null;

		while (offsetParent != null) {
			res.x += offsetParent.offsetLeft;
			res.y += offsetParent.offsetTop;
			
			var parentTagName = offsetParent.tagName.toLowerCase();	

			if ((__isIEOld && parentTagName != "table") || (__isFireFoxNew && parentTagName == "td")  || __isChrome) {		    
				borderWidth = __getBorderWidth(offsetParent);
				res.x += borderWidth.left;
				res.y += borderWidth.top;
			}
		    
			if (offsetParent != document.body && offsetParent != document.documentElement) {
				res.x -= offsetParent.scrollLeft;
				res.y -= offsetParent.scrollTop;
			}


			//next lines are necessary to fix the problem with offsetParent
   			if (!__isIE && !__isOperaOld || __isIENew) {
    			while (offsetParent != parentNode && parentNode !== null) {
					res.x -= parentNode.scrollLeft;
					res.y -= parentNode.scrollTop;
					if (__isFireFoxOld || __isWebKit) {
						borderWidth = __getBorderWidth(parentNode);
						res.x += borderWidth.left;
						res.y += borderWidth.top;
					}
    				parentNode = parentNode.parentNode;
    			}    
			}

   			parentNode = offsetParent.parentNode;
    		offsetParent = offsetParent.offsetParent;
		}
	}
    return res;
}


//=== End of Copied Code ============

 </script>
</html><!-- text below generated by server. PLEASE REMOVE --><!-- Counter/Statistics data collection code --><script language="JavaScript" src="http://l.yimg.com/t/smb/js/geov2.js"></script><script language="javascript">geovisit();</script><noscript><img src="http://visit1.geo.vip.in2.yahoo.com/visit.gif?in1260058218" alt="setstats" border="0" width="1" height="1"></noscript>

